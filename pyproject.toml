[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "f451-cloud"
description = "f451 Labs Cloud module"
readme = "README.md"
authors = [{name = "Martin Lanser", email = "martinlanser@gmail.com"}]
license = {file = "LICENSE"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3"
]
keywords = ["cloud", "f451"]
dependencies = [
    "tomli; python_version < '3.11'",
    "typing-extensions; python_version < '3.10'",
    "frozendict",
    "adafruit-io",
    "arduino-iot-client",
    "requests",
    "requests-oauthlib",
]
requires-python = ">=3.9"
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "black", 
    "bumpver", 
    "isort", 
    "pip-tools", 
    "pytest",
    "pytest-random"
]

[project.urls]
Homepage = "https://github.com/mlanser/f451-cloud"

[project.scripts]
f451_cloud = "f451_cloud.__main__:main"

[tool.bumpver]
current_version = "1.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"']
"src/f451_cloud/__init__.py" = ['__version__ = "{version}"']
"README.md" = ['v{version}$']

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 99
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default. Also enable flake8-bugbear (`B`) rules. 
# But avoid enforcing line-length violations (`E501`)
select = ["E4", "E7", "E9", "F", "B"]
ignore = ["E501"]

# Allow fix for all enabled rules (when `--fix`) is provided. But avoid trying 
# to fix flake8-bugbear (`B`) violations.
fixable = ["ALL"]
unfixable = ["B"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Ignore `E402` (import violations) in all `__init__.py` files, 
# and in select subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
